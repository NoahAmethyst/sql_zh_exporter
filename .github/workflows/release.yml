# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go
name: Go create executable file
on:
  push:
    tags:
      - 'v*'
env:
  BINARY_PREFIX: "sql-zh-exporter_"
  BINARY_SUFFIX: ""
  COMMIT_ID: "${{ github.sha }}"
  PR_PROMPT: "::warning:: Build artifact will not be uploaded due to the workflow is trigged by pull request."

jobs:
  build:
    name: Build binary CI
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [ linux, windows, darwin ]
        goarch: [ "386", amd64, arm, arm64 ]
        exclude:
          - goos: darwin
            goarch: arm
          - goos: darwin
            goarch: "386"
      fail-fast: true
    steps:
      - uses: actions/checkout@v3
      - name: Setup Go environment
        uses: actions/setup-go@v3
        with:
          cache: true
          go-version: '1.19'
      - name: Build binary file
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          IS_PR: ${{ !!github.head_ref }}
        run: |
          if [ $GOOS = "windows" ]; then export BINARY_SUFFIX="$BINARY_SUFFIX.exe"; fi
          if $IS_PR ; then echo $PR_PROMPT; fi
          export BINARY_NAME="$BINARY_PREFIX"$GOOS"_$GOARCH$BINARY_SUFFIX"
          export CGO_ENABLED=0
          go build -o "output/$BINARY_NAME"  .
          cp config.yml output/config.yml
          cp job_config.yml output/job_config.yml
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        if: ${{ !github.head_ref }}
        with:
          name: |
            ${{ matrix.goos }}_${{ matrix.goarch }}
            config.yml
            job_config.yml
          path: output/

  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        run: |
          git version
          git clone https://github.com/NoahAmethyst/sql_zh_exporter.git /home/runner/work/sql_zh_exporter/sql_zh_exporter
      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
